name: Kubernetes Manifest Validation  # ワークフローの名前。GitHub Actionsのワークフローの一覧で表示されます。

on:
  push:
    paths:
      - 'k8s/manifest_2/**'  # 'k8s/manifest_2'配下のファイルが変更された際に、このワークフローがトリガーされる。
  pull_request:
    paths:
      - 'k8s/manifest_2/**'  # 'k8s/manifest_2'配下に対するプルリクエストが作成または更新された際に、このワークフローがトリガーされる。

jobs:
  validate:  # ジョブの名前。バリデーションプロセスのジョブを定義。
    runs-on: ubuntu-latest  # ジョブを実行する環境（Ubuntuの最新バージョン）を指定。

    steps:
    # 1. リポジトリのコードをチェックアウト
    - uses: actions/checkout@v3  # GitHubリポジトリのコードをアクションの実行環境にチェックアウトするための公式アクション。

    # 2. kubeconform と kustomize をセットアップ
    - uses: yokawasa/action-setup-kube-tools@v0.9.2  # yokawasaのアクションを使用して、Kubernetes関連のツールをセットアップする。
      with:
      # kubeconform（Kubernetesリソースマニフェストのバリデーションツール）をセットアップ。
      # kustomize（Kubernetesマニフェストのカスタマイズツール）をセットアップ。
        setup-tools: |
          kubeconform  
          kustomize  
        kubeconform: '0.5.0'  # kubeconformのバージョンを0.5.0に指定。
        kustomize: '5.0.0'  # kustomizeのバージョンを5.0.0に指定。

    # 3. basesディレクトリのバリデーション
    # kustomizeを使ってk8s/manifest_2/basesディレクトリをビルドし、その結果をkubeconformでバリデーションする。
    # kubeconformがデフォルトのKubernetesスキーマを使用してバリデーションするように指定。
    # リソース種別とAPIバージョンに基づいたスキーマを使用するように指定。
    # バリデーション結果をJSON形式で出力。
    - run: |
        kustomize build k8s/manifest_2/bases | kubeconform -summary \  
        -schema-location default \  
        -schema-location "schemas/{{ .ResourceKind }}_{{ .ResourceAPIVersion }}.json" \  
        -output json  
